# Docker development environment
version: '3.8'

services:
  # Redis service for development
  redis:
    image: redis:7-alpine
    container_name: c2c-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Development application with hot reload
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: c2c-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - RCLONE_PATH=/usr/local/bin/rclone
      - RCLONE_CONFIG_PATH=/app/config/rclone.conf
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
      - ./logs:/app/logs
      - ./config:/app/config
      - ./data:/app/data
    depends_on:
      redis:
        condition: service_healthy
    command: npm run dev

  # Frontend development server
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: c2c-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/client/node_modules
    working_dir: /app/client
    command: npm run dev -- --host 0.0.0.0

volumes:
  redis_dev_data:
    driver: local

networks:
  default:
    driver: bridge
